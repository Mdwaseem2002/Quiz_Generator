{"ast":null,"code":"export default {\n  data() {\n    return {\n      numQuestions: 1,\n      topic: \"\",\n      difficulty: \"EASY\",\n      generatedQuestions: [],\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async generateQuestions() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/generate_questions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            numQuestions: this.numQuestions,\n            topic: this.topic,\n            difficulty: this.difficulty\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.generatedQuestions = data.generated_questions;\n          this.errorMessage = \"\";\n        } else {\n          this.errorMessage = \"Error generating questions\";\n        }\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","numQuestions","topic","difficulty","generatedQuestions","errorMessage","methods","generateQuestions","response","fetch","method","headers","body","JSON","stringify","ok","json","generated_questions","error","message"],"sources":["/home/waseem/project/quiz_generator/client-/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Generate Questions</h1>\n    <form @submit.prevent=\"generateQuestions\">\n      <label for=\"numQuestions\">Number of questions:</label>\n      <input type=\"number\" id=\"numQuestions\" v-model=\"numQuestions\" min=\"1\" required>\n      <br>\n      <label for=\"topic\">Topic:</label>\n      <input type=\"text\" id=\"topic\" v-model=\"topic\" required>\n      <br>\n      <label for=\"difficulty\">Difficulty:</label>\n      <select id=\"difficulty\" v-model=\"difficulty\" required>\n        <option value=\"EASY\">Easy</option>\n        <option value=\"MEDIUM\">Medium</option>\n        <option value=\"HARD\">Hard</option>\n      </select>\n      <br>\n      <button type=\"submit\">Generate</button>\n    </form>\n    <div v-if=\"generatedQuestions.length > 0\">\n      <h2>Generated Questions</h2>\n      <ul>\n        <li v-for=\"question in generatedQuestions\" :key=\"question.query\">\n          <strong>{{ question.query }}</strong>\n          <ul>\n            <li v-for=\"(choice, index) in question.choices\" :key=\"index\">{{ choice }}</li>\n          </ul>\n          <p><strong>Answer:</strong> {{ question.choices[question.answer] }}</p>\n          <p><strong>Explanation:</strong> {{ question.explanation }}</p>\n        </li>\n      </ul>\n    </div>\n    <div v-else-if=\"errorMessage\">\n      <p>{{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      numQuestions: 1,\n      topic: \"\",\n      difficulty: \"EASY\",\n      generatedQuestions: [],\n      errorMessage: \"\",\n    };\n  },\n  methods: {\n    async generateQuestions() {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/generate_questions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            numQuestions: this.numQuestions,\n            topic: this.topic,\n            difficulty: this.difficulty,\n          }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.generatedQuestions = data.generated_questions;\n          this.errorMessage = \"\";\n        } else {\n          this.errorMessage = \"Error generating questions\";\n        }\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add any styling here */\n</style>\n"],"mappings":"AAuCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,CAAC;MACfC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,MAAM;MAClBC,kBAAkB,EAAE,EAAE;MACtBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,0CAA0C,EAAE;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBb,YAAY,EAAE,IAAI,CAACA,YAAY;YAC/BC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,UAAU,EAAE,IAAI,CAACA;UACnB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACO,EAAE,EAAE;UACf,MAAMf,IAAG,GAAI,MAAMQ,QAAQ,CAACQ,IAAI,CAAC,CAAC;UAClC,IAAI,CAACZ,kBAAiB,GAAIJ,IAAI,CAACiB,mBAAmB;UAClD,IAAI,CAACZ,YAAW,GAAI,EAAE;QACxB,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,4BAA4B;QAClD;MACF,EAAE,OAAOa,KAAK,EAAE;QACd,IAAI,CAACb,YAAW,GAAIa,KAAK,CAACC,OAAO;MACnC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}