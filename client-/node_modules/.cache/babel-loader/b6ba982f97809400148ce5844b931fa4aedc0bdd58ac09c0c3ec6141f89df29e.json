{"ast":null,"code":"export default {\n  data() {\n    return {\n      paragraph: '',\n      selectedDifficulty: 'easy',\n      maxQuestions: 5,\n      quiz: [],\n      questionType: 'multipleChoice'\n    };\n  },\n  methods: {\n    async generateQuiz() {\n      try {\n        const response = await this.fetchQuestions();\n        this.quiz = response.questions;\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    },\n    submitQuiz() {\n      console.log('Quiz submitted:', this.quiz);\n      // You can send the quiz data to your backend for scoring and analysis\n    },\n    async fetchQuestions() {\n      const url = `/path/to/backend/endpoint?difficulty=${this.selectedDifficulty}&maxQuestions=${this.maxQuestions}&paragraph=${encodeURIComponent(this.paragraph)}`;\n      const response = await fetch(\"http://127.0.0.1:5000/generate_questions\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }\n  }\n};","map":{"version":3,"names":["data","paragraph","selectedDifficulty","maxQuestions","quiz","questionType","methods","generateQuiz","response","fetchQuestions","questions","error","console","submitQuiz","log","url","encodeURIComponent","fetch","ok","Error","status","json"],"sources":["/home/waseem/project/quiz_generator/client-/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>AI-Powered Quiz Generator</h1>\n\n    <table>\n      <tr>\n        <td class=\"label\">Enter Paragraph:</td>\n        <td><textarea v-model=\"paragraph\"></textarea></td>\n      </tr>\n      <tr>\n        <td class=\"label\">Choose Difficulty:</td>\n        <td>\n          <select v-model=\"selectedDifficulty\">\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </td>\n      </tr>\n      <tr>\n        <td class=\"label\">Max Number of Questions:</td>\n        <td><input type=\"number\" v-model=\"maxQuestions\" /></td>\n      </tr>\n      <tr>\n        <td colspan=\"2\" style=\"text-align: center;\">\n          <button @click=\"generateQuiz\" class=\"generate-button\">Generate Quiz</button>\n        </td>\n      </tr>\n    </table>\n\n    <div v-if=\"quiz.length\">\n      <table class=\"quiz-table\">\n        <thead>\n          <tr>\n            <th>Question</th>\n            <th>Options</th>\n            <th v-if=\"questionType === 'multipleChoice'\">Selected Option</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(question, index) in quiz\" :key=\"index\">\n            <td>{{ question.question }}</td>\n            <td>\n              <ul v-if=\"questionType === 'multipleChoice'\">\n                <li v-for=\"(option, i) in question.options\" :key=\"i\">\n                  <input\n                    type=\"radio\"\n                    :id=\"'q' + index + 'o' + i\"\n                    :name=\"'q' + index\"\n                    v-model=\"question.selected\"\n                    :value=\"i\"\n                  />\n                  <label :for=\"'q' + index + 'o' + i\">{{ option }}</label>\n                </li>\n              </ul>\n            </td>\n            <td v-if=\"questionType === 'multipleChoice'\">{{ question.selected }}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <button @click=\"submitQuiz\" class=\"submit-button\">Submit Quiz</button>\n    </div>\n\n    <div v-else>\n      <p>Loading quiz...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      paragraph: '',\n      selectedDifficulty: 'easy',\n      maxQuestions: 5,\n      quiz: [],\n      questionType: 'multipleChoice',\n    };\n  },\n  methods: {\n    async generateQuiz() {\n      try {\n        const response = await this.fetchQuestions();\n        this.quiz = response.questions;\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    },\n    submitQuiz() {\n      console.log('Quiz submitted:', this.quiz);\n      // You can send the quiz data to your backend for scoring and analysis\n    },\n    async fetchQuestions() {\n      const url = `/path/to/backend/endpoint?difficulty=${this.selectedDifficulty}&maxQuestions=${this.maxQuestions}&paragraph=${encodeURIComponent(this.paragraph)}`;\n      const response = await fetch(\"http://127.0.0.1:5000/generate_questions\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n  .container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n\n  table {\n    margin: 20px;\n    border-collapse: collapse;\n    width: 50%;\n  }\n\n  table, th, td {\n    border: 1px solid #ddd;\n  }\n\n  th, td {\n    padding: 10px;\n    text-align: left;\n  }\n\n  textarea {\n    width: 100%;\n    height: 100px;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    resize: vertical;\n  }\n\n  .label {\n    font-weight: bold;\n  }\n\n  .generate-button {\n    background-color: #4CAF50;\n    color: #fff;\n    border: none;\n    padding: 10px 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border-radius: 4px;\n  }\n\n  .generate-button:hover {\n    background-color: #45a049;\n  }\n\n  .submit-button {\n    background-color: #007BFF;\n    color: #fff;\n    border: none;\n    padding: 10px 15px;\n    font-size: 16px;\n    cursor: pointer;\n    border-radius: 4px;\n    margin-top: 10px;\n  }\n\n  .submit-button:hover {\n    background-color: #0056b3;\n  }\n\n  .quiz-table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n  }\n\n  .quiz-table th, .quiz-table td {\n    border: 1px solid #ddd;\n    padding: 10px;\n    text-align: left;\n  }\n\n  .quiz-table th {\n    background-color: #f2f2f2;\n  }\n</style>"],"mappings":"AAuEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,kBAAkB,EAAE,MAAM;MAC1BC,YAAY,EAAE,CAAC;MACfC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC5C,IAAI,CAACL,IAAG,GAAII,QAAQ,CAACE,SAAS;MAChC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDE,UAAUA,CAAA,EAAG;MACXD,OAAO,CAACE,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACV,IAAI,CAAC;MACzC;IACF,CAAC;IACD,MAAMK,cAAcA,CAAA,EAAG;MACrB,MAAMM,GAAE,GAAK,wCAAuC,IAAI,CAACb,kBAAmB,iBAAgB,IAAI,CAACC,YAAa,cAAaa,kBAAkB,CAAC,IAAI,CAACf,SAAS,CAAE,EAAC;MAC/J,MAAMO,QAAO,GAAI,MAAMS,KAAK,CAAC,0CAA0C,CAAC;MACxE,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBX,QAAQ,CAACY,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IACxB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}